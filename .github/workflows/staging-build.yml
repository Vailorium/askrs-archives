name: Staging Build

on:
  push:
    branches: [ main ]

  workflow_dispatch:

jobs:
  build_and_push:
    runs-on: ubuntu-latest
    environment: Staging Build
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v2
      
      - name: Build container images
        env:
          REACT_APP_CDN_URL: ${{ secrets.REACT_APP_CDN_URL }}
          REACT_APP_API_URL: ${{ secrets.REACT_APP_API_URL }}
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASS: ${{ secrets.DB_PASS }}
          DB_NAME: ${{ vars.DB_NAME }}
          FIREBASE_ADMIN_CLIENT_EMAIL: ${{ secrets.FIREBASE_ADMIN_CLIENT_EMAIL }}
          FIREBASE_ADMIN_CLIENT_ID: ${{ secrets.FIREBASE_ADMIN_CLIENT_ID }}
          FIREBASE_ADMIN_PRIVATE_KEY: ${{ secrets.FIREBASE_ADMIN_PRIVATE_KEY }}
          FIREBASE_ADMIN_PRIVATE_KEY_ID: ${{ secrets.FIREBASE_ADMIN_PRIVATE_KEY_ID }}
          FIREBASE_ADMIN_AUTH_PROVIDER_X509_CERT_URL: ${{ vars.FIREBASE_ADMIN_AUTH_PROVIDER_X509_CERT_URL }}
          FIREBASE_ADMIN_AUTH_URI: ${{ vars.FIREBASE_ADMIN_AUTH_URI }}
          FIREBASE_ADMIN_CLIENT_X509_CERT_URL: ${{ vars.FIREBASE_ADMIN_CLIENT_X509_CERT_URL }}
          FIREBASE_ADMIN_PROJECT_ID: ${{ vars.FIREBASE_ADMIN_PROJECT_ID }}
          FIREBASE_ADMIN_TOKEN_URI: ${{ vars.FIREBASE_ADMIN_TOKEN_URI }}
          FIREBASE_ADMIN_TYPE: ${{ vars.FIREBASE_ADMIN_TYPE }}
        run: docker compose -f docker-compose.staging.yml build

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Login to Doctl
        run: doctl registry login

      - name: Remove old client images
        run: if [ ! -z "$(doctl registry repository list | grep askrs-archives-client)" ]; then doctl registry repository delete-manifest askrs-archives-client $(doctl registry repository list-tags askrs-archives-client | grep -o "sha.*") --force; else echo "No repository client"; fi
      
      - name: Remove old server images
        run: if [ ! -z "$(doctl registry repository list | grep askrs-archives-server)" ]; then doctl registry repository delete-manifest askrs-archives-server $(doctl registry repository list-tags askrs-archives-server | grep -o "sha.*") --force; else echo "No repository server"; fi
      
      - name: Tag client image with fully qualified destination path
        run: "docker tag askrs-archives-client:staging ${{ vars.CONTAINER_REGISTRY_URL }}/askrs-archives-client:staging"
      
      - name: Tag server image with fully qualified destination path
        run: "docker tag askrs-archives-server:staging ${{ vars.CONTAINER_REGISTRY_URL }}/askrs-archives-server:staging"
      
      - name: Push client image to registry
        run: "docker push ${{ vars.CONTAINER_REGISTRY_URL }}/askrs-archives-client:staging"
      
      - name: Push server image to registry
        run: "docker push ${{ vars.CONTAINER_REGISTRY_URL }}/askrs-archives-server:staging"
